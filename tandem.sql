-- MySQL Script generated by MySQL Workbench
-- Sun 25 Oct 2015 18:50:23 GMT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema tandem
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `tandem` ;

-- -----------------------------------------------------
-- Schema tandem
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tandem` DEFAULT CHARACTER SET utf8 ;
USE `tandem` ;

-- -----------------------------------------------------
-- Table `tandem`.`Users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tandem`.`Users` ;

CREATE TABLE IF NOT EXISTS `tandem`.`Users` (
  `idUser` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Surname` LONGTEXT NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `Birthdate` DATE NOT NULL,
  `Occupation` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `CountryOfOrigin` VARCHAR(45) NOT NULL,
  `CountryOfResidence` VARCHAR(45) NOT NULL,
  `Status` INT(11) NOT NULL,
  PRIMARY KEY (`idUser`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tandem`.`Languages`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tandem`.`Languages` ;

CREATE TABLE IF NOT EXISTS `tandem`.`Languages` (
  `idLanguages` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idLanguages`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tandem`.`Users_has_Languages`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tandem`.`Users_has_Languages` ;

CREATE TABLE IF NOT EXISTS `tandem`.`Users_has_Languages` (
  `Users_idUser` INT NOT NULL,
  `Languages_idLanguages` INT NOT NULL,
  `Fluency` INT(11) NOT NULL,
  `hasInterest` TINYINT(1) NOT NULL,
  `Native` TINYINT(1) NOT NULL,
  PRIMARY KEY (`Users_idUser`, `Languages_idLanguages`),
  INDEX `fk_Users_has_Languages_Languages1_idx` (`Languages_idLanguages` ASC),
  INDEX `fk_Users_has_Languages_Users_idx` (`Users_idUser` ASC),
  CONSTRAINT `fk_Users_has_Languages_Users`
    FOREIGN KEY (`Users_idUser`)
    REFERENCES `tandem`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_Languages_Languages1`
    FOREIGN KEY (`Languages_idLanguages`)
    REFERENCES `tandem`.`Languages` (`idLanguages`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tandem`.`Friends`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tandem`.`Friends` ;

CREATE TABLE IF NOT EXISTS `tandem`.`Friends` (
  `idFriends` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`idFriends`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tandem`.`Users_has_Friends`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tandem`.`Users_has_Friends` ;

CREATE TABLE IF NOT EXISTS `tandem`.`Users_has_Friends` (
  `Users_idUser` INT NOT NULL,
  `Friends_idFriends` INT NOT NULL,
  PRIMARY KEY (`Users_idUser`, `Friends_idFriends`),
  INDEX `fk_Users_has_Friends_Friends1_idx` (`Friends_idFriends` ASC),
  INDEX `fk_Users_has_Friends_Users1_idx` (`Users_idUser` ASC),
  CONSTRAINT `fk_Users_has_Friends_Users1`
    FOREIGN KEY (`Users_idUser`)
    REFERENCES `tandem`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_Friends_Friends1`
    FOREIGN KEY (`Friends_idFriends`)
    REFERENCES `tandem`.`Friends` (`idFriends`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
